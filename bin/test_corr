#!/usr/bin/env python

import sys,os
# Add the root of the repo to the include path.
sys.path.append(os.path.abspath('.'))

import numpy as np
import unittest
from sharpefolio import calc, stocks
import datetime

class TestSequenceFunctions(unittest.TestCase):

    # def setUp(self):
        # https://docs.google.com/spreadsheets/d/1khXkmGhHytQ0heDK2t9pkiZcAurzlV8maGFhy4UDPFY

    def test_date_correction(self):
        prices = {
            "AAPL": [
                stocks.Price(1, datetime.datetime.strptime('2014-08-01', "%Y-%m-%d"), 30, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-02', "%Y-%m-%d"), 40, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-03', "%Y-%m-%d"), 50, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-04', "%Y-%m-%d"), 60, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-05', "%Y-%m-%d"), 70, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-06', "%Y-%m-%d"), 80, 0),
            ],
            "TWTR": [
                stocks.Price(1, datetime.datetime.strptime('2014-08-01', "%Y-%m-%d"), 30, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-02', "%Y-%m-%d"), 40, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-03', "%Y-%m-%d"), 50, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-04', "%Y-%m-%d"), 60, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-05', "%Y-%m-%d"), 70, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-06', "%Y-%m-%d"), 80, 0),
            ],
            "FB"  : [
                stocks.Price(1, datetime.datetime.strptime('2014-08-01', "%Y-%m-%d"), 30, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-02', "%Y-%m-%d"), 40, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-03', "%Y-%m-%d"), 50, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-04', "%Y-%m-%d"), 60, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-05', "%Y-%m-%d"), 70, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-06', "%Y-%m-%d"), 80, 0),
            ],
            "LNKD": [
                stocks.Price(1, datetime.datetime.strptime('2014-08-01', "%Y-%m-%d"), 30, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-02', "%Y-%m-%d"), 40, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-03', "%Y-%m-%d"), 50, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-04', "%Y-%m-%d"), 60, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-05', "%Y-%m-%d"), 70, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-06', "%Y-%m-%d"), 80, 0),
            ],
            "ZNGA": [
                stocks.Price(1, datetime.datetime.strptime('2014-08-01', "%Y-%m-%d"), 30, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-02', "%Y-%m-%d"), 40, 0),
                # stocks.Price(1, datetime.datetime.strptime('2014-08-03', "%Y-%m-%d"), 50, 0),
                # stocks.Price(1, datetime.datetime.strptime('2014-08-04', "%Y-%m-%d"), 60, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-05', "%Y-%m-%d"), 70, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-06', "%Y-%m-%d"), 80, 0),
            ],
            "GRPN": [
                # stocks.Price(1, datetime.datetime.strptime('2014-08-01', "%Y-%m-%d"), 30, 0),
                # stocks.Price(1, datetime.datetime.strptime('2014-08-02', "%Y-%m-%d"), 40, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-03', "%Y-%m-%d"), 50, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-04', "%Y-%m-%d"), 60, 0),
                # stocks.Price(1, datetime.datetime.strptime('2014-08-05', "%Y-%m-%d"), 70, 0),
                # stocks.Price(1, datetime.datetime.strptime('2014-08-06', "%Y-%m-%d"), 80, 0),
            ],
            "IBM" : [
                stocks.Price(1, datetime.datetime.strptime('2014-08-01', "%Y-%m-%d"), 30, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-02', "%Y-%m-%d"), 40, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-03', "%Y-%m-%d"), 50, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-04', "%Y-%m-%d"), 60, 0),
                # stocks.Price(1, datetime.datetime.strptime('2014-08-05', "%Y-%m-%d"), 70, 0),
                # stocks.Price(1, datetime.datetime.strptime('2014-08-06', "%Y-%m-%d"), 80, 0),
            ],
            "MSFT": [
                # stocks.Price(1, datetime.datetime.strptime('2014-08-01', "%Y-%m-%d"), 30, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-02', "%Y-%m-%d"), 40, 0),
                # stocks.Price(1, datetime.datetime.strptime('2014-08-03', "%Y-%m-%d"), 50, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-04', "%Y-%m-%d"), 60, 0),
                # stocks.Price(1, datetime.datetime.strptime('2014-08-05', "%Y-%m-%d"), 70, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-06', "%Y-%m-%d"), 80, 0),
            ],
            "GOOG": [
                stocks.Price(1, datetime.datetime.strptime('2014-08-01', "%Y-%m-%d"), 30, 0),
                # stocks.Price(1, datetime.datetime.strptime('2014-08-02', "%Y-%m-%d"), 40, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-03', "%Y-%m-%d"), 50, 0),
                # stocks.Price(1, datetime.datetime.strptime('2014-08-04', "%Y-%m-%d"), 60, 0),
                stocks.Price(1, datetime.datetime.strptime('2014-08-05', "%Y-%m-%d"), 70, 0),
                # stocks.Price(1, datetime.datetime.strptime('2014-08-06', "%Y-%m-%d"), 80, 0),
            ],
        }

        valid_prices = {'AAPL': [30, 40, 50, 60, 70, 80],
                        'FB': [30, 40, 50, 60, 70, 80],
                        'GOOG': [30, 30, 50, 50, 70, 70],
                        'GRPN': [50, 50, 50, 60, 60, 60],
                        'IBM': [30, 40, 50, 60, 60, 60],
                        'LNKD': [30, 40, 50, 60, 70, 80],
                        'MSFT': [40, 40, 40, 60, 60, 80],
                        'TWTR': [30, 40, 50, 60, 70, 80],
                        'ZNGA': [30, 40, 40, 40, 70, 80]}

        picker = calc.InvertedCorrelationPicker(prices)
        self.maxDiff = None
        self.assertEqual(valid_prices, picker.stocks)


if __name__ == '__main__':
    unittest.main()